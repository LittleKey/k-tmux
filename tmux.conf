#==========================================
# URL: https://github.com/wklken/k-tmux
# Author:  wklken
# Version: 0.1.1
# Email: wklken@yeah.net
# ReadMe: README.md
# Donation: http://www.wklken.me/pages/donation.html
# Last_modify: 2015-08-06
#==========================================
# Dependecny:
#    1. brew install reattach-to-user-namespace
#    2. gem install tmuxinator
#    3. vim: christoomey/vim-tmux-navigator


#--------------------------- base config begin -------------------------------

# 全局设置
setw -g xterm-keys on
# Using set -gq instead of set -g will silence the unknown option error, while still setting it on old versions of tmux
set -gq status-utf8 on                            # enable utf-8
set-option -g default-terminal "screen-256color"    # use 256 colors for better compatibility
set -ga terminal-overrides ",xterm-256color:Tc"
set -ga terminal-overrides ",*256col*:Tc"
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'
set-environment -g COLORTERM truecolor
set-option -g history-limit 100000                # scrollback buffer n lines
set-option -g display-time 5000                   # 提示信息的持续时间；设置足够的时间以避免看不清提示，单位为毫秒
set-option -g repeat-time 1000                    # 控制台激活后的持续时间；设置合适的时间以避免每次操作都要先激活控制台，单位为毫秒
set-window-option -g display-panes-time 1500
set-option -g repeat-time 0                       # Allow the arrow key to be used immediately after changing windows

set-option -g renumber-windows on                 # window 0, 1, 2, remove 1, renumber to 0, 1

# Set window notifications
setw -g monitor-activity off
set -g visual-activity off

# use C-q, since it's on the home row and easier to hit than C-b
set-option -g prefix C-q
unbind-key C-b
# press C-q-q send prefix to nested session. (sush as tmux in ssh
bind-key q send-prefix

# bind a reload key: prefix+R
bind R source-file ~/.tmux.conf \; display-message "Config reloaded.."

set-option -g status-justify centre
set -g status-interval 1
setw -g automatic-rename on

# -------------------------------- session begin --------------------------------
# bind -r ( switch-client -p
# bind -r ) switch-client -n

# session切换
unbind-key j
bind-key j switch-client -n
unbind-key k
bind-key k switch-client -p

unbind-key n
bind-key n new-session

# quickly jump session by session-name: prefix+F
bind F command-prompt -p '(find-session)' 'switchc -t %1'

# -------------------------------- session end --------------------------------

# -------------------------------- window begin --------------------------------
set-option -g base-index 1                        #窗口的初始序号；默认为0，这里设置为1

set-window-option -g pane-base-index 1            # panes index start at 1, setw means set-window-option
set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80

# [prefix-c] 创建新窗口
bind-key c new-window -c '#{pane_current_path}'
# pprefix-x] 关闭窗口
unbind-key &
bind-key x confirm-before -p "kill-window #W? (y/n)" kill-window
# [prefix-数字] 切换窗口
# [prefix-p] 切换窗口

# [prefix-t/T] 切换窗口
# bind-key t next-window
# bind-key T previous-window
# bind-key space next-window
# bind-key bspace previous-window

# [prefix-Ctrl-o] 窗口轮转
#bind-key C-o rotate-window

# 窗口切换
unbind-key h
bind-key h select-window -p
unbind-key l
bind-key l select-window -n

# -------------------------------- window end --------------------------------

# -------------------------------- pane begin --------------------------------
unbind '"'
unbind %
# key bindings for horizontal and vertical panes
# 键 [\|] 和 [_-] 少敲一个shift键
bind-key \\ split-window -h -c '#{pane_current_path}'
bind-key - split-window -v -c '#{pane_current_path}'

# 窗口间切换
# [prefix-hjkl] pane之间移动
# unbind-key h
# bind-key h select-pane -L
# unbind-key j
# bind-key j select-pane -D
# unbind-key k
# bind-key k select-pane -U
# unbind-key l
# bind-key l select-pane -R
# smart pane switching with awareness of vim splits
# [Ctrl-hjkl] pane之间移动
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim$' && tmux send-keys C-l) || tmux select-pane -R"
# [Ctrl-l] 左右两个切  [Ctrl-\] 最近的两个切换
bind -n C-\\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"
bind C-l send-keys 'C-l'

# [prefix-a] 展示窗口数字并选择跳转
bind-key a display-panes
# bind-key a last-pane # 绑什么好?

# 窗口大小调整
# resize panes using PREFIX H, J, K, L
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5

# toggle zoomed pane
bind ` resize-pane -Z

# layout
# [prefix-space]
bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical

# -------------------------------- pane end --------------------------------

# -------------------------------- move/copy/paste begin --------------------------------
# use vi mode
# vi is good  把 Tmux 设为 vi 模式，使其与 Vim 的操作更加接近
setw -g mode-keys vi

# [ 进入复制，space键开始选择问题  方向键移动， / 回车复制  / ] 黏贴
bind-key [ copy-mode
bind-key ] paste-buffer

# Copy and paste like in vim
# p 换成paste
unbind p
bind p paste-buffer


# the following vi-copy bindings match my vim settings
#   see https://github.com/gpakosz/.vim.git
# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle

bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi Escape send-keys -X cancel
bind-key -T copy-mode-vi H send-keys -X start-of-line
bind-key -T copy-mode-vi L send-keys -X end-of-line

# Update default binding of `Enter` to also use copy-pipe
unbind-key -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# for osx
# Enable native Mac OS X copy/paste  对于mac用户，可以复制到系统剪贴板
# set -g default-command "reattach-to-user-namespace -l $SHELL"
# set -g default-command "exec $SHELL -l"
set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"
# -------------------------------- move/copy/paste end --------------------------------

# -------------------------------- mouse begin --------------------------------
# mouse behavior
# Using set -gq instead of set -g will silence the unknown option error, while still setting it on old versions of tmux
setw -gq mode-mouse on
set -gq mouse-select-pane on
set -gq mouse-resize-pane on
set -gq mouse-select-window on
# -------------------------------- mouse end --------------------------------

#--------------------------- base config end -------------------------------

# --------------------- rose-pine begin -----------------------

set -g @rose_pine_variant 'dawn'

set -g @rose_pine_host 'off' # Enables hostname in the status bar
set -g @rose_pine_date_time '%a %H:%M' # It accepts the date UNIX command format (man date for info)
set -g @rose_pine_user 'off' # Turn on the username component in the statusbar
set -g @rose_pine_directory 'off' # Turn on the current folder component in the status bar
# set -g @rose_pine_bar_bg_disable 'on' # Disables background color, for transparent terminal emulators
# If @rose_pine_bar_bg_disable is set to 'on', uses the provided value to set the background color
# It can be any of the on tmux (named colors, 256-color set, `default` or hex colors)
# See more on http://man.openbsd.org/OpenBSD-current/man1/tmux.1#STYLES
# set -g @rose_pine_bar_bg_disabled_color_option 'default'

set -g @rose_pine_only_windows 'off' # Leaves only the window module, for max focus and space
set -g @rose_pine_disable_active_window_menu 'off' # Disables the menu that shows the active window on the left

set -g @rose_pine_default_window_behavior 'on' # Forces tmux default window list behaviour
set -g @rose_pine_show_current_program 'off' # Forces tmux to show the current running program as window name
set -g @rose_pine_show_pane_directory 'off' # Forces tmux to show the current directory as window name
# Previously set -g @rose_pine_window_tabs_enabled

# Example values for these can be:
set -g @rose_pine_left_separator ' ' # The strings to use as separators are 1-space padded
set -g @rose_pine_right_separator ' ' # Accepts both normal chars & nerdfont icons
set -g @rose_pine_field_separator ' | ' # Again, 1-space padding, it updates with prefix + I
set -g @rose_pine_window_separator ':' # Replaces the default `:` between the window number and name

# These are not padded
set -g @rose_pine_session_icon '' # Changes the default icon to the left of the session name
set -g @rose_pine_current_window_icon '' # Changes the default icon to the left of the active window name
set -g @rose_pine_folder_icon '' # Changes the default icon to the left of the current directory folder
set -g @rose_pine_username_icon '' # Changes the default icon to the right of the hostname
set -g @rose_pine_hostname_icon '󰒋' # Changes the default icon to the right of the hostname
set -g @rose_pine_date_time_icon '󰃰' # Changes the default icon to the right of the date module
set -g @rose_pine_window_status_separator "  " # Changes the default icon that appears between window names

# Very beta and specific opt-in settings, tested on v3.2a, look at issue #10
set -g @rose_pine_prioritize_windows 'on' # Disables the right side functionality in a certain window count / terminal width
set -g @rose_pine_width_to_hide '80' # Specify a terminal width to toggle off most of the right side functionality
set -g @rose_pine_window_count '5' # Specify a number of windows, if there are more than the number, do the same as width_to_hide

# Add to the beginning / end of the left and right sections your own.
set -g @rose_pine_status_left_prepend_section ''
set -g @rose_pine_status_left_append_section '#{prefix_highlight}'
set -g @rose_pine_status_right_prepend_section ''
set -g @rose_pine_status_right_append_section '#{battery_percentage}#{battery_icon_status}'

# ---------------------- rose-pine end ------------------------

# --------------------- catppuccin begin -----------------------

# Configure the catppuccin plugin
source-file ~/.config/tmux/theme.conf
set -g @catppuccin_window_status_style "rounded"

# Load catppuccin
run ~/.tmux/plugins/tmux/catppuccin.tmux

# Make the status line pretty and add some modules
set -g status-right-length 100
set -g status-left-length 100

set -g status-left "#{E:@catppuccin_status_session}"
set -ag status-left "#{prefix_highlight}"

set -gF status-right "#{E:@catppuccin_status_battery}"
set -agF status-right "#{E:@catppuccin_status_date_time}"

# ---------------------- catppuccin end ------------------------

# ------------------------ tmux-cpu begin ---------------------------

set -g @cpu_low_icon "ᚋ"
set -g @cpu_medium_icon "ᚌ"
set -g @cpu_high_icon "ᚍ"

# ------------------------ tmux-cpu end ---------------------------

# ------------------------ tmux-battery begin ---------------------------

set -g @batt_icon_charge_tier8 '󰁹'
set -g @batt_icon_charge_tier7 '󰂂'
set -g @batt_icon_charge_tier6 '󰂀'
set -g @batt_icon_charge_tier5 '󰁿'
set -g @batt_icon_charge_tier4 '󰁾'
set -g @batt_icon_charge_tier3 '󰁽'
set -g @batt_icon_charge_tier2 '󰁼'
set -g @batt_icon_charge_tier1 '󰁺'
set -g @batt_icon_status_charged '  '
set -g @batt_icon_status_charging ' 󰂄'
set -g @batt_icon_status_discharging ' 󱟤'
set -g @batt_icon_status_attached ' 󱠴'
set -g @batt_icon_status_unknown ' 󰂑'
set -g @batt_color_status_primary_charged '#3daee9'
set -g @batt_color_status_primary_charging '#3daee9'

# ------------------------ tmux-battery end ---------------------------

# --------------------- tmux-prefix-highlight begin -----------------------

set -g @prefix_highlight_fg '#faf4ed,bold'
set -g @prefix_highlight_bg '#fe640b'

set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=#faf4ed,bold,bg=#d7827e'

set -g @prefix_highlight_output_prefix '['
set -g @prefix_highlight_output_suffix ']'

#--------------------------- plugins config end ----------------------------
